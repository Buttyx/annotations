<?xml version="1.0" encoding="utf-8"?>
<project name="Annotations tool" default="" basedir="../">

    <!--******** PROPERTIES ********-->

        <!-- properties files -->
        <loadproperties srcfile="build/config/project.properties" />

        <!-- License -->
        <loadfile property="license" srcfile="LICENSE" />
        <!--<loadfile property="jsbuild" srcfile="${js.build}" />-->

        <tstamp>
            <format property="build.time"
                    pattern="MM dd yyyy,  hh:mm:ss"
                    locale="de,CH"/>
        </tstamp>

    <!--******** CUSTOM TASKS ********-->

        <taskdef name="jshint" classname="com.philmander.jshint.JsHintAntTask" classpath="${tools.dir}/ant-jshint-0.3.3-deps.jar" />

    <!--******** TARGETS ********-->

    <!-- JSHint -->
        <property name="log.file" value="${basedir}/build/logs/jshint-results-${build.time}.xml" />

        <target name="validate-all">
            <jshint dir="${src.dir}" optionsFile="${jshint.properties}" globalsFile="${jshint.globals}">
                    <include name="**/*.js" />
                    <exclude name="libs/*" />
                    <report type="xml" destFile="${jshint.log.file}" />
            </jshint>
        </target>

        <target name="validate-one">
            <jshint dir="${basedir}" optionsFile="${jshint.properties}" globalsFile="${jshint.globals}">
             <include name="${file}"/>
            </jshint>
        </target>

    <!-- License -->
        <!-- Not used at the moment -->
        <target name="license">
            <echo message="Add license information to ${destfile}" />
            <concat destfile="${destfile}" fixlastline="yes" eol="lf">
                <header trimleading="yes">/**
                 *  ${copyright}
                 *  Licensed under the Educational Community License, Version 2.0
                 *  (the "License"); you may not use this file except in compliance
                 *  with the License. You may obtain a copy of the License at
                 *
                 *  http://www.osedu.org/licenses/ECL-2.0
                 *
                 *  Unless required by applicable law or agreed to in writing,
                 *  software distributed under the License is distributed on an "AS IS"
                 *  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
                 *  or implied. See the License for the specific language governing
                 *  permissions and limitations under the License.
                 */

                /**
                 * Annotations Tool : https://github.com/entwinemedia/annotations
                 * Version: ${version}
                 * ${build.time}
                 */
                </header>
                <fileset file="${srcfile}" />
            </concat>
        </target>

    <!-- Versionning -->
        <target name="version">
            <echo message="Add version number: ${version}"/>
            <replaceregexp match="@VERSION@" replace="${version}" flags="g" byline="true">
                <filelist dir="${targetdir}" files="index.html"/>
            </replaceregexp>

            <!--<replaceregexp match="@BUILDTIME@" replace="${build.time}" flags="g" byline="true">
                <fileset dir="${src.dir}" includes="**/*"/>
            </replaceregexp> -->
        </target>

    <!-- Tests -->
        <target name="tests">
            <echo message="UNIT TESTS: Backone models"/>
            <exec executable="phantomjs" failonerror="true"> 
                <arg path="${phantomjs.driver}"/>
                <arg path="${tests.dir}/models.html"/>
            </exec>

            <echo message="UNIT TESTS: Backone collections"/>
            <exec executable="phantomjs" failonerror="true"> 
                <arg path="${phantomjs.driver}"/>
                <arg path="${tests.dir}/collections.html"/>
            </exec> 
        </target>

    <!-- Less -->
        <target name="less" description="Convert LESS to CSS then concatenate and Minify any stylesheets">
                <echo message="Compiling LESS to CSS..."/>
                <!-- Clear the former compiled css files -->
              <delete includeemptydirs="true">
                    <fileset dir="${style.dir}" includes="*.css, **/*.css" excludes="*qunit.css, *colorpicker.css, *timeline/timeline.css" defaultexcludes="false"/>
              </delete>

              <apply dir="${style.dir}" executable="java" parallel="false" failonerror="true">
                    <!-- Give the input bundle of less files-->
                  <fileset dir="${style.dir}">
                      <include name="*.less"/>
                  </fileset>
                  <arg value="-jar" />
                  <arg path="${rhino.jar}" />
                  <arg path="${less-rhino}" />
                  <srcfile/>
                    <!-- Output the compiled css file with corresponding name -->
                  <mapper type="glob" from="*.less" to="${style.dir}/*.css"/>
                  <targetfile/>
              </apply>
        </target>

    <!-- JS Doc -->
        <target name="jsdoc" description="Publishes documentation">
            <!-- Delete any existing docs directory -->
            <echo message="Deleting previous documentation"/>
            <delete dir="./${docs.dir}/"/>

            <echo message="Building documentation"/>
            <exec executable="./jsdoc" dir="${jsdoc.dir}">
                <arg line="-c" />
                <arg value="${docs.config}" />
                <arg line="-t" />
                <arg value="templates/default" />
                <arg value="${docs.readme}" />
            </exec>

        </target>

    <!-- Require JS optimisation -->
        <target name="optimize" description="Combining and minifying JS files.">
            <echo message="Preparing optimzation settings" />
            <property name="temp.properties" value="${basedir}/build/config/optimizer_temp.js" />
            <property name="temp.out" value="${basedir}/temp_out.js" />
            <copy file="${optimization.properties}" tofile="${temp.properties}" overwrite="true"/>
            <replaceregexp match="@OUT@" replace="${temp.out}" flags="g" byline="true" file="${temp.properties}" />

            <echo message="optimized with settings ${temp.properties}" />
            <java classname="org.mozilla.javascript.tools.shell.Main">
                <classpath>
                    <pathelement location="${rhino.jar}" />
                    <!--<pathelement location="${closure.jar}" />-->
                </classpath>
                <arg value="${r.js}"/>
                <arg value="-o"/>
                <arg value="${temp.properties}"/>
            </java>

            <antcall target="license">
                <param name="srcfile" value="${temp.out}" />
                <param name="destfile" value="${optimization.out}" />
            </antcall>

            <delete file="${temp.properties}" quiet="true"/>
            <delete file="${temp.out}" quiet="true"/>
        </target>
</project>